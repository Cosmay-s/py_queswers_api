import httpx
import time

BASE_URL = "http://127.0.0.1:8000/api/v1"


def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–¥–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ–≥–ª–∞—Å–Ω–æ –∫—Ä–∏–µ—Ä–∏—è–º")

    time.sleep(1)

    with httpx.Client(timeout=30.0) as client:
        try:
            # 1. –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤
            print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–æ–ø—Ä–æ—Å–æ–≤ ===")

            # POST /questions/
            question_data = {"text": "–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å?"}
            response = client.post(
                f"{BASE_URL}/questions/",
                json=question_data)
            assert response.status_code == 201
            question = response.json()
            question_id = question["id"]
            print("‚úÖ POST /questions/")

            # GET /questions/
            response = client.get(f"{BASE_URL}/questions/")
            assert response.status_code == 200
            print("‚úÖ GET /questions/")

            # GET /questions/{id}
            response = client.get(f"{BASE_URL}/questions/{question_id}")
            assert response.status_code == 200
            print("‚úÖ GET /questions/{id}")

            # 2. –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
            print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –û—Ç–≤–µ—Ç–æ–≤ ===")

            # POST /answers/questions/{id}/answers/
            answer_data = {"text": "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç", "user_id": "user123"}
            response = client.post(
                f"{BASE_URL}/answers/questions/{question_id}/answers/",
                json=answer_data
            )
            assert response.status_code == 201
            answer = response.json()
            answer_id = answer["id"]
            print("‚úÖ POST /answers/questions/{id}/answers/")

            # GET /answers/{id}
            response = client.get(f"{BASE_URL}/answers/{answer_id}")
            assert response.status_code == 200
            print("‚úÖ GET /answers/{id}")

            # DELETE /answers/{id}
            response = client.delete(f"{BASE_URL}/answers/{answer_id}")
            assert response.status_code == 200
            print("‚úÖ DELETE /answers/{id}")

            # 3. –¢–µ—Å—Ç –∫–∞—Å–∫–∞–¥–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ö–∞—Å–∫–∞–¥–Ω–æ–≥–æ –£–¥–∞–ª–µ–Ω–∏—è ===")

            # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ –∫–∞—Å–∫–∞–¥–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            response = client.post(
                f"{BASE_URL}/answers/questions/{question_id}/answers/",
                json=answer_data
            )
            answer_id = response.json()["id"]

            # DELETE /questions/{id} (–¥–æ–ª–∂–µ–Ω –∫–∞—Å–∫–∞–¥–Ω–æ —É–¥–∞–ª–∏—Ç—å –æ—Ç–≤–µ—Ç—ã)
            response = client.delete(f"{BASE_URL}/questions/{question_id}")
            assert response.status_code == 200
            print("‚úÖ DELETE /questions/{id}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Å–∫–∞–¥–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            response = client.get(f"{BASE_URL}/answers/{answer_id}")
            assert response.status_code == 404
            print("‚úÖ –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

            print("üéâ –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã API —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return True

        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {e}")
            return False


if __name__ == "__main__":
    test_api()
