import httpx
import time

BASE_URL = "http://127.0.0.1:8000/api/v1"


def test_api():
    """
    –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç API.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏:
    - —Å–æ–∑–¥–∞–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤;
    - –±–∞–∑–æ–≤—É—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤.

    –í–∫–ª—é—á–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è,
    –Ω–æ –Ω–µ —É–≥–ª—É–±–ª—è–µ—Ç—Å—è –≤ –ª–æ–≥–∏–∫—É.
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞...")

    time.sleep(1)

    with httpx.Client(timeout=30.0) as client:
        try:
            # –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            print("=== –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å API ===")

            # –°–æ–∑–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å
            question_data = {"text": "–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å?"}
            response = client.post(
                f"{BASE_URL}/questions/",
                json=question_data
                )
            assert response.status_code == 201
            question = response.json()
            question_id = question["id"]
            print(f"‚úÖ –í–æ–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω —Å id={question_id}")

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
            response = client.get(f"{BASE_URL}/questions/")
            assert response.status_code == 200
            print("‚úÖ –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—É—á–µ–Ω")

            # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ id —Å –æ—Ç–≤–µ—Ç–∞–º–∏
            response = client.get(f"{BASE_URL}/questions/{question_id}")
            assert response.status_code == 200
            print(f"‚úÖ –í–æ–ø—Ä–æ—Å —Å id={question_id} –ø–æ–ª—É—á–µ–Ω")

            # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç
            answer_data = {"text": "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç", "user_id": "user123"}
            response = client.post(
                f"{BASE_URL}/answers/questions/{question_id}/answers/",
                json=answer_data,
            )
            assert response.status_code == 201
            answer = response.json()
            answer_id = answer["id"]
            print(f"‚úÖ –û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω —Å id={answer_id}")

            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ id
            response = client.get(f"{BASE_URL}/answers/{answer_id}")
            assert response.status_code == 200
            print(f"‚úÖ –û—Ç–≤–µ—Ç —Å id={answer_id} –ø–æ–ª—É—á–µ–Ω")

            # –£–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç
            response = client.delete(f"{BASE_URL}/answers/{answer_id}")
            assert response.status_code == 200
            print(f"‚úÖ –û—Ç–≤–µ—Ç —Å id={answer_id} —É–¥–∞–ª—ë–Ω")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª
            print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª ===")

            # –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
            print("–ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É")
            response = client.post(
                f"{BASE_URL}/answers/questions/9999/answers/", json=answer_data
            )
            assert response.status_code == 404
            print("‚úÖ –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É")

            # –û–¥–∏–Ω —é–∑–µ—Ä –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤ –∫ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É
            print(
                "–ü—Ä–æ–≤–µ—Ä–∫–∞: —é–∑–µ—Ä –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤"
                )
            answer1_data = {"text": "–û—Ç–≤–µ—Ç 1", "user_id": "multi_user"}
            answer2_data = {"text": "–û—Ç–≤–µ—Ç 2", "user_id": "multi_user"}

            resp1 = client.post(
                f"{BASE_URL}/answers/questions/{question_id}/answers/",
                json=answer1_data
            )
            resp2 = client.post(
                f"{BASE_URL}/answers/questions/{question_id}/answers/",
                json=answer2_data
            )
            assert resp1.status_code == 201
            assert resp2.status_code == 201

            response = client.get(f"{BASE_URL}/questions/{question_id}")
            question = response.json()
            assert len(question["answers"]) == 2
            print(
                "‚úÖ –û–¥–∏–Ω —é–∑–µ—Ä –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤ –∫ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É"
                )

            # –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
            print("–ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞")
            response = client.delete(f"{BASE_URL}/questions/{question_id}")
            assert response.status_code == 200

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã
            response = client.get(f"{BASE_URL}/questions/{question_id}")
            assert response.status_code == 404
            print("‚úÖ –í–æ–ø—Ä–æ—Å –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∫–∞—Å–∫–∞–¥–Ω–æ")

            print("üéâ –¢–µ—Å—Ç—ã API –∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True

        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
            return False


if __name__ == "__main__":
    test_api()
