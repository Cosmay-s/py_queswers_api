import httpx
import time
import random

BASE_URL = "http://127.0.0.1:8000/api/v1"


def test_validation():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞...")
    time.sleep(1)

    with httpx.Client(timeout=30.0) as client:
        try:
            print("=== –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ ===")

            response = client.post(f"{BASE_URL}/questions/",
                                   json={"text": "Hi?"})
            assert response.status_code == 422, "–î–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å"
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")

            response = client.post(f"{BASE_URL}/questions/",
                                   json={"text": "   "})
            assert response.status_code == 422, "–î–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –ø—É—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å"
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")

            unique_question_text = f"–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ? #{random.randint(10000, 99999)}"
            valid_question = {"text": unique_question_text}
            response = client.post(f"{BASE_URL}/questions/",
                                   json=valid_question)
            if response.status_code != 201:
                print(
                    f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞: —Å—Ç–∞—Ç—É—Å {response.status_code}"
                    )
                print("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.text)
            assert response.status_code == 201
            question_id = response.json()["id"]

            duplicate_question = {"text": f"  {unique_question_text.lower()}  "}
            response = client.post(f"{BASE_URL}/questions/",
                                   json=duplicate_question)
            assert response.status_code == 400, "–î–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã"
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞")

            # (–¥–∞–ª–µ–µ –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...)
            # ...

            # –ü–æ—Å–ª–µ —Ç–µ—Å—Ç–∞ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å:
            client.delete(f"{BASE_URL}/questions/{question_id}")

            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True

        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
            import traceback
            traceback.print_exc()
            return False


if __name__ == "__main__":
    success = test_validation()
    exit(0 if success else 1)
